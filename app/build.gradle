apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 27
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

// Task to delete the old jar
task deleteOldJar(type: Delete){
    delete 'release/mlmath.jar'
}

// Task to export contents as jar
task exportJar(type: Copy){
    from('build/intermediates/aar_main_jar/release/')
    into('release/')
    include('classes.jar')
    // Rename the jar.
    rename('classes.jar', 'mlmath.jar')
}

exportJar.dependsOn(deleteOldJar, build)

// Task to generate jar containing sources
task generateSourcesJar (type: Jar) {
    archiveClassifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

// Task to delete the old jar
task deleteSourcesJar(type: Delete){
    delete 'libs/mlmath-sources.jar'
}

task exportSourcesJar(type: Copy){
    from('build/libs/')
    into('release/')
    include('app-sources.jar')
    // Rename the jar.
    rename('app-sources.jar', 'mlmath-sources.jar')
}

exportSourcesJar.dependsOn(deleteSourcesJar, generateSourcesJar)

artifacts {
    archives generateSourcesJar
}
